//agar question mai initially sbhi values zero ya one di h to array use kre bina ho jaaayega.

#include<bits/stdc++.h>
using namespace std;
#define ll unsigned long long int
const int mex=500000;
class segtree{public:
         ll* tree,*lazy;
         segtree()
         {
             tree=new ll[4*mex];
             lazy=new ll[4*mex];
             for(ll i=0; i<4*mex; i++)
             {
                 tree[i]=0;
                 lazy[i]=0;
             }
         }
         
         void build(ll node,ll s, ll e)
         {
             if(s==e)
             {tree[node]=0;   // agar array hoti to uski value k hisaab se daalte.
             return;
             }
             ll m=(s+e)/2;
             build(2*node,s,m);
             build(2*node+1,m+1,e);
             
             tree[node]=tree[2*node]+tree[2*node+1];
             
         }
         
         void update( ll node, ll s, ll e,ll idx,ll type)
         {
             if(type==1)
             {
                 if(s==e)
                 {
                    
                     tree[node]+=1;
                     return;
                 }
                 ll m=(e+s)/2;
                 if(s<=idx && idx<=m)
                 update(2*node,s,m,idx,type);
                 else
                 update(2*node+1,m+1,e,idx,type);
                 
                tree[node]=tree[2*node]+tree[2*node+1]; 
             }
             if(type==2)
             {
                if(s==e)
                 {   if(tree[node]>0)
                     tree[node]-=1;
                     return;
                 }
                 ll m=(e+s)/2;
                 if(s<=idx && idx<=m)
                 update(2*node,s,m,idx,type);
                 else
                 update(2*node+1,m+1,e,idx,type);
                 
                tree[node]=tree[2*node]+tree[2*node+1]; 
 
                 
                 
             }
             
         }
        ll query(ll node, ll s, ll e, ll l,ll r )
        {
            if(r<s || l>e)
            return 0;
            if(l<=s && e<=r)
            return tree[node];
            ll m=(e+s)/2;
            return(query(2*node,s,m,l,r)+query(2*node+1,m+1,e,l,r));
            
        }
         
         
};

int main()
{    ios_base::sync_with_stdio(false);
cin.tie(0);
    ll n,q;
    cin>>n>>q;
    segtree t;
    t.build(1,1,n);
    while(q--)
    {
        ll type;
        cin>>type;
        if(type==1)
        {    ll idx;
        cin>>idx;
            t.update(1,1,n,idx,1);
        }
        else if(type==2)
        {
            ll idx;
            cin>>idx;
            t.update(1,1,n,idx,2);
        }
        else
        {
            ll l,r;
            cin>>l>>r;
           cout<< t.query(1,1,n,l,r)<<endl;
        }
        
    }
    
    
    
}